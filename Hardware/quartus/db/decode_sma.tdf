--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3225w[2..0]	: WIRE;
	w_anode3238w[3..0]	: WIRE;
	w_anode3255w[3..0]	: WIRE;
	w_anode3265w[3..0]	: WIRE;
	w_anode3275w[3..0]	: WIRE;
	w_anode3285w[3..0]	: WIRE;
	w_anode3295w[3..0]	: WIRE;
	w_anode3305w[3..0]	: WIRE;
	w_anode3315w[3..0]	: WIRE;
	w_anode3327w[2..0]	: WIRE;
	w_anode3336w[3..0]	: WIRE;
	w_anode3347w[3..0]	: WIRE;
	w_anode3357w[3..0]	: WIRE;
	w_anode3367w[3..0]	: WIRE;
	w_anode3377w[3..0]	: WIRE;
	w_anode3387w[3..0]	: WIRE;
	w_anode3397w[3..0]	: WIRE;
	w_anode3407w[3..0]	: WIRE;
	w_anode3418w[2..0]	: WIRE;
	w_anode3427w[3..0]	: WIRE;
	w_anode3438w[3..0]	: WIRE;
	w_anode3448w[3..0]	: WIRE;
	w_anode3458w[3..0]	: WIRE;
	w_anode3468w[3..0]	: WIRE;
	w_anode3478w[3..0]	: WIRE;
	w_anode3488w[3..0]	: WIRE;
	w_anode3498w[3..0]	: WIRE;
	w_anode3509w[2..0]	: WIRE;
	w_anode3518w[3..0]	: WIRE;
	w_anode3529w[3..0]	: WIRE;
	w_anode3539w[3..0]	: WIRE;
	w_anode3549w[3..0]	: WIRE;
	w_anode3559w[3..0]	: WIRE;
	w_anode3569w[3..0]	: WIRE;
	w_anode3579w[3..0]	: WIRE;
	w_anode3589w[3..0]	: WIRE;
	w_data3223w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode3589w[3..3], w_anode3579w[3..3], w_anode3569w[3..3], w_anode3559w[3..3], w_anode3549w[3..3], w_anode3539w[3..3], w_anode3529w[3..3], w_anode3518w[3..3]), ( w_anode3498w[3..3], w_anode3488w[3..3], w_anode3478w[3..3], w_anode3468w[3..3], w_anode3458w[3..3], w_anode3448w[3..3], w_anode3438w[3..3], w_anode3427w[3..3]), ( w_anode3407w[3..3], w_anode3397w[3..3], w_anode3387w[3..3], w_anode3377w[3..3], w_anode3367w[3..3], w_anode3357w[3..3], w_anode3347w[3..3], w_anode3336w[3..3]), ( w_anode3315w[3..3], w_anode3305w[3..3], w_anode3295w[3..3], w_anode3285w[3..3], w_anode3275w[3..3], w_anode3265w[3..3], w_anode3255w[3..3], w_anode3238w[3..3]));
	w_anode3225w[] = ( (w_anode3225w[1..1] & (! data_wire[4..4])), (w_anode3225w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3238w[] = ( (w_anode3238w[2..2] & (! w_data3223w[2..2])), (w_anode3238w[1..1] & (! w_data3223w[1..1])), (w_anode3238w[0..0] & (! w_data3223w[0..0])), w_anode3225w[2..2]);
	w_anode3255w[] = ( (w_anode3255w[2..2] & (! w_data3223w[2..2])), (w_anode3255w[1..1] & (! w_data3223w[1..1])), (w_anode3255w[0..0] & w_data3223w[0..0]), w_anode3225w[2..2]);
	w_anode3265w[] = ( (w_anode3265w[2..2] & (! w_data3223w[2..2])), (w_anode3265w[1..1] & w_data3223w[1..1]), (w_anode3265w[0..0] & (! w_data3223w[0..0])), w_anode3225w[2..2]);
	w_anode3275w[] = ( (w_anode3275w[2..2] & (! w_data3223w[2..2])), (w_anode3275w[1..1] & w_data3223w[1..1]), (w_anode3275w[0..0] & w_data3223w[0..0]), w_anode3225w[2..2]);
	w_anode3285w[] = ( (w_anode3285w[2..2] & w_data3223w[2..2]), (w_anode3285w[1..1] & (! w_data3223w[1..1])), (w_anode3285w[0..0] & (! w_data3223w[0..0])), w_anode3225w[2..2]);
	w_anode3295w[] = ( (w_anode3295w[2..2] & w_data3223w[2..2]), (w_anode3295w[1..1] & (! w_data3223w[1..1])), (w_anode3295w[0..0] & w_data3223w[0..0]), w_anode3225w[2..2]);
	w_anode3305w[] = ( (w_anode3305w[2..2] & w_data3223w[2..2]), (w_anode3305w[1..1] & w_data3223w[1..1]), (w_anode3305w[0..0] & (! w_data3223w[0..0])), w_anode3225w[2..2]);
	w_anode3315w[] = ( (w_anode3315w[2..2] & w_data3223w[2..2]), (w_anode3315w[1..1] & w_data3223w[1..1]), (w_anode3315w[0..0] & w_data3223w[0..0]), w_anode3225w[2..2]);
	w_anode3327w[] = ( (w_anode3327w[1..1] & (! data_wire[4..4])), (w_anode3327w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3336w[] = ( (w_anode3336w[2..2] & (! w_data3223w[2..2])), (w_anode3336w[1..1] & (! w_data3223w[1..1])), (w_anode3336w[0..0] & (! w_data3223w[0..0])), w_anode3327w[2..2]);
	w_anode3347w[] = ( (w_anode3347w[2..2] & (! w_data3223w[2..2])), (w_anode3347w[1..1] & (! w_data3223w[1..1])), (w_anode3347w[0..0] & w_data3223w[0..0]), w_anode3327w[2..2]);
	w_anode3357w[] = ( (w_anode3357w[2..2] & (! w_data3223w[2..2])), (w_anode3357w[1..1] & w_data3223w[1..1]), (w_anode3357w[0..0] & (! w_data3223w[0..0])), w_anode3327w[2..2]);
	w_anode3367w[] = ( (w_anode3367w[2..2] & (! w_data3223w[2..2])), (w_anode3367w[1..1] & w_data3223w[1..1]), (w_anode3367w[0..0] & w_data3223w[0..0]), w_anode3327w[2..2]);
	w_anode3377w[] = ( (w_anode3377w[2..2] & w_data3223w[2..2]), (w_anode3377w[1..1] & (! w_data3223w[1..1])), (w_anode3377w[0..0] & (! w_data3223w[0..0])), w_anode3327w[2..2]);
	w_anode3387w[] = ( (w_anode3387w[2..2] & w_data3223w[2..2]), (w_anode3387w[1..1] & (! w_data3223w[1..1])), (w_anode3387w[0..0] & w_data3223w[0..0]), w_anode3327w[2..2]);
	w_anode3397w[] = ( (w_anode3397w[2..2] & w_data3223w[2..2]), (w_anode3397w[1..1] & w_data3223w[1..1]), (w_anode3397w[0..0] & (! w_data3223w[0..0])), w_anode3327w[2..2]);
	w_anode3407w[] = ( (w_anode3407w[2..2] & w_data3223w[2..2]), (w_anode3407w[1..1] & w_data3223w[1..1]), (w_anode3407w[0..0] & w_data3223w[0..0]), w_anode3327w[2..2]);
	w_anode3418w[] = ( (w_anode3418w[1..1] & data_wire[4..4]), (w_anode3418w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3427w[] = ( (w_anode3427w[2..2] & (! w_data3223w[2..2])), (w_anode3427w[1..1] & (! w_data3223w[1..1])), (w_anode3427w[0..0] & (! w_data3223w[0..0])), w_anode3418w[2..2]);
	w_anode3438w[] = ( (w_anode3438w[2..2] & (! w_data3223w[2..2])), (w_anode3438w[1..1] & (! w_data3223w[1..1])), (w_anode3438w[0..0] & w_data3223w[0..0]), w_anode3418w[2..2]);
	w_anode3448w[] = ( (w_anode3448w[2..2] & (! w_data3223w[2..2])), (w_anode3448w[1..1] & w_data3223w[1..1]), (w_anode3448w[0..0] & (! w_data3223w[0..0])), w_anode3418w[2..2]);
	w_anode3458w[] = ( (w_anode3458w[2..2] & (! w_data3223w[2..2])), (w_anode3458w[1..1] & w_data3223w[1..1]), (w_anode3458w[0..0] & w_data3223w[0..0]), w_anode3418w[2..2]);
	w_anode3468w[] = ( (w_anode3468w[2..2] & w_data3223w[2..2]), (w_anode3468w[1..1] & (! w_data3223w[1..1])), (w_anode3468w[0..0] & (! w_data3223w[0..0])), w_anode3418w[2..2]);
	w_anode3478w[] = ( (w_anode3478w[2..2] & w_data3223w[2..2]), (w_anode3478w[1..1] & (! w_data3223w[1..1])), (w_anode3478w[0..0] & w_data3223w[0..0]), w_anode3418w[2..2]);
	w_anode3488w[] = ( (w_anode3488w[2..2] & w_data3223w[2..2]), (w_anode3488w[1..1] & w_data3223w[1..1]), (w_anode3488w[0..0] & (! w_data3223w[0..0])), w_anode3418w[2..2]);
	w_anode3498w[] = ( (w_anode3498w[2..2] & w_data3223w[2..2]), (w_anode3498w[1..1] & w_data3223w[1..1]), (w_anode3498w[0..0] & w_data3223w[0..0]), w_anode3418w[2..2]);
	w_anode3509w[] = ( (w_anode3509w[1..1] & data_wire[4..4]), (w_anode3509w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3518w[] = ( (w_anode3518w[2..2] & (! w_data3223w[2..2])), (w_anode3518w[1..1] & (! w_data3223w[1..1])), (w_anode3518w[0..0] & (! w_data3223w[0..0])), w_anode3509w[2..2]);
	w_anode3529w[] = ( (w_anode3529w[2..2] & (! w_data3223w[2..2])), (w_anode3529w[1..1] & (! w_data3223w[1..1])), (w_anode3529w[0..0] & w_data3223w[0..0]), w_anode3509w[2..2]);
	w_anode3539w[] = ( (w_anode3539w[2..2] & (! w_data3223w[2..2])), (w_anode3539w[1..1] & w_data3223w[1..1]), (w_anode3539w[0..0] & (! w_data3223w[0..0])), w_anode3509w[2..2]);
	w_anode3549w[] = ( (w_anode3549w[2..2] & (! w_data3223w[2..2])), (w_anode3549w[1..1] & w_data3223w[1..1]), (w_anode3549w[0..0] & w_data3223w[0..0]), w_anode3509w[2..2]);
	w_anode3559w[] = ( (w_anode3559w[2..2] & w_data3223w[2..2]), (w_anode3559w[1..1] & (! w_data3223w[1..1])), (w_anode3559w[0..0] & (! w_data3223w[0..0])), w_anode3509w[2..2]);
	w_anode3569w[] = ( (w_anode3569w[2..2] & w_data3223w[2..2]), (w_anode3569w[1..1] & (! w_data3223w[1..1])), (w_anode3569w[0..0] & w_data3223w[0..0]), w_anode3509w[2..2]);
	w_anode3579w[] = ( (w_anode3579w[2..2] & w_data3223w[2..2]), (w_anode3579w[1..1] & w_data3223w[1..1]), (w_anode3579w[0..0] & (! w_data3223w[0..0])), w_anode3509w[2..2]);
	w_anode3589w[] = ( (w_anode3589w[2..2] & w_data3223w[2..2]), (w_anode3589w[1..1] & w_data3223w[1..1]), (w_anode3589w[0..0] & w_data3223w[0..0]), w_anode3509w[2..2]);
	w_data3223w[2..0] = data_wire[2..0];
END;
--VALID FILE
